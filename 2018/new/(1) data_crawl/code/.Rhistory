# 1992 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/1992_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[2]],"\n")[[1]]
count_1992 <- data.frame(Country = 1:64)
for(i in 1:length(temp)){
count_1992[i,1] <- temp[i]
}
count_1992 <- separate(count_1992,Country,sep = "\\(",
into = c('Country','ath'))
count_1992$ath <- str_replace_all(count_1992$ath,'\\)','')
count_1992$Country <- str_replace_all(count_1992$Country,' ','!torep')
count_1992$Country <- str_replace_all(count_1992$Country,'[:space:]','')
count_1992$Country <- str_replace_all(count_1992$Country,'!torep',' ')
# 1994 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/1994_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[1]],"\n")[[1]]
count_1994 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_1994[i,1] <- temp[i]
}
count_1994 <- separate(count_1994,Country,sep = "\\(",
into = c('Country','ath'))
count_1994$ath <- str_replace_all(count_1994$ath,'\\)','')
count_1994$Country <- str_replace_all(count_1994$Country,' ','!torep')
count_1994$Country <- str_replace_all(count_1994$Country,'[:space:]','')
count_1994$Country <- str_replace_all(count_1994$Country,'!torep',' ')
# 2002 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/2002_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[3]],"\n")[[1]]
count_2002 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_2002[i,1] <- temp[i]
}
count_2002 <- separate(count_2002,Country,sep = "\\(",
into = c('Country','ath'))
count_2002$ath <- str_replace_all(count_2002$ath,'\\)','')
count_2002$Country <- str_replace_all(count_2002$Country,' ','!torep')
count_2002$Country <- str_replace_all(count_2002$Country,'[:space:]','')
count_2002$Country <- str_replace_all(count_2002$Country,'!torep',' ')
# 2002 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/2002_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[2]],"\n")[[1]]
count_2002 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_2002[i,1] <- temp[i]
}
count_2002 <- separate(count_2002,Country,sep = "\\(",
into = c('Country','ath'))
count_2002$ath <- str_replace_all(count_2002$ath,'\\)','')
count_2002$Country <- str_replace_all(count_2002$Country,' ','!torep')
count_2002$Country <- str_replace_all(count_2002$Country,'[:space:]','')
count_2002$Country <- str_replace_all(count_2002$Country,'!torep',' ')
# 2006 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/2006_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[2]],"\n")[[1]]
count_2006 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_2006[i,1] <- temp[i]
}
count_2006 <- separate(count_2006,Country,sep = "\\(",
into = c('Country','ath'))
count_2006$ath <- str_replace_all(count_2006$ath,'\\)','')
count_2006$Country <- str_replace_all(count_2006$Country,' ','!torep')
count_2006$Country <- str_replace_all(count_2006$Country,'[:space:]','')
count_2006$Country <- str_replace_all(count_2006$Country,'!torep',' ')
# 2010 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/2010_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[1]],"\n")[[1]]
count_2010 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_2010[i,1] <- temp[i]
}
count_2010 <- separate(count_2010,Country,sep = "\\(",
into = c('Country','ath'))
count_2010$ath <- str_replace_all(count_2010$ath,'\\)','')
count_2010$Country <- str_replace_all(count_2010$Country,' ','!torep')
count_2010$Country <- str_replace_all(count_2010$Country,'[:space:]','')
count_2010$Country <- str_replace_all(count_2010$Country,'!torep',' ')
# 2014 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/2014_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
a <- data.frame(test[[1]])
temp <- str_split(a[1,1],"\n")[[1]]
count_2014 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_2014[i,1] <- temp[i]
}
count_2014 <- separate(count_2014,Country,sep = "\\(",
into = c('Country','ath'))
count_2014$ath <- str_replace_all(count_2014$ath,'\\)','')
count_2014$Country <- str_replace_all(count_2014$Country,' ','!torep')
count_2014$Country <- str_replace_all(count_2014$Country,'[:space:]','')
count_2014$Country <- str_replace_all(count_2014$Country,'!torep',' ')
# finally 2018 winter olympic.
url2 <- 'https://en.wikipedia.org/wiki/2018_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
count_2018 <- data.frame(test[[2]])
# korea(cor) with 35 ath == women's ice hockey.
# north 12
# south 23
count_2018 <- count_2018[-which(count_2018$IOC.Code == "COR"),]
idx <- which(count_2018$IOC.Code %in% c('KOR','PRK'))
count_2018$Country <- str_replace_all(count_2018$Country,"\\[a\\]|\\[b\\]","")
count_2018$Athletes[idx] <- count_2018$Athletes[idx] + c(23,12)
count_2018 <- count_2018[,c(2,3)]
nations <- rbind(count_1992,count_1994,count_1998,count_2002,
count_2006,count_2010,count_2014)
(year <- ls()[startsWith(ls(),"count")][-8])
(year <- str_replace_all(year,'\\D',''))
nations$year <- rep(year,c(64,67,72,78,80,82,88))
# write.csv(nations,'country.csv')
pkgs <- c('dplyr','stringr','tidyr',
'data.table','rvest')
sapply(pkgs,require,character.only = TRUE)
# 1992 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/1992_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
pkgs <- c('dplyr','stringr','tidyr',
'data.table','rvest')
sapply(pkgs,require,character.only = TRUE)
# 1992 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/1992_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[2]],"\n")[[1]]
count_1992 <- data.frame(Country = 1:64)
for(i in 1:length(temp)){
count_1992[i,1] <- temp[i]
}
count_1992 <- separate(count_1992,Country,sep = "\\(",
into = c('Country','ath'))
count_1992$ath <- str_replace_all(count_1992$ath,'\\)','')
count_1992$Country <- str_replace_all(count_1992$Country,' ','!torep')
count_1992$Country <- str_replace_all(count_1992$Country,'[:space:]','')
count_1992$Country <- str_replace_all(count_1992$Country,'!torep',' ')
# 1994 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/1994_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[1]],"\n")[[1]]
count_1994 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_1994[i,1] <- temp[i]
}
count_1994 <- separate(count_1994,Country,sep = "\\(",
into = c('Country','ath'))
count_1994$ath <- str_replace_all(count_1994$ath,'\\)','')
count_1994$Country <- str_replace_all(count_1994$Country,' ','!torep')
count_1994$Country <- str_replace_all(count_1994$Country,'[:space:]','')
count_1994$Country <- str_replace_all(count_1994$Country,'!torep',' ')
# 2002 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/2002_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[3]],"\n")[[1]]
count_2002 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_2002[i,1] <- temp[i]
}
count_2002 <- separate(count_2002,Country,sep = "\\(",
into = c('Country','ath'))
count_2002$ath <- str_replace_all(count_2002$ath,'\\)','')
count_2002$Country <- str_replace_all(count_2002$Country,' ','!torep')
count_2002$Country <- str_replace_all(count_2002$Country,'[:space:]','')
count_2002$Country <- str_replace_all(count_2002$Country,'!torep',' ')
# 2002 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/2002_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[2]],"\n")[[1]]
count_2002 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_2002[i,1] <- temp[i]
}
count_2002 <- separate(count_2002,Country,sep = "\\(",
into = c('Country','ath'))
count_2002$ath <- str_replace_all(count_2002$ath,'\\)','')
count_2002$Country <- str_replace_all(count_2002$Country,' ','!torep')
count_2002$Country <- str_replace_all(count_2002$Country,'[:space:]','')
count_2002$Country <- str_replace_all(count_2002$Country,'!torep',' ')
# 2006 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/2006_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[2]],"\n")[[1]]
count_2006 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_2006[i,1] <- temp[i]
}
count_2006 <- separate(count_2006,Country,sep = "\\(",
into = c('Country','ath'))
count_2006$ath <- str_replace_all(count_2006$ath,'\\)','')
count_2006$Country <- str_replace_all(count_2006$Country,' ','!torep')
count_2006$Country <- str_replace_all(count_2006$Country,'[:space:]','')
count_2006$Country <- str_replace_all(count_2006$Country,'!torep',' ')
# 2010 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/2010_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[1]],"\n")[[1]]
count_2010 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_2010[i,1] <- temp[i]
}
count_2010 <- separate(count_2010,Country,sep = "\\(",
into = c('Country','ath'))
count_2010$ath <- str_replace_all(count_2010$ath,'\\)','')
count_2010$Country <- str_replace_all(count_2010$Country,' ','!torep')
count_2010$Country <- str_replace_all(count_2010$Country,'[:space:]','')
count_2010$Country <- str_replace_all(count_2010$Country,'!torep',' ')
# 2014 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/2014_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
a <- data.frame(test[[1]])
temp <- str_split(a[1,1],"\n")[[1]]
count_2014 <- data.frame(Country = 1:length(temp))
for(i in 1:length(temp)){
count_2014[i,1] <- temp[i]
}
count_2014 <- separate(count_2014,Country,sep = "\\(",
into = c('Country','ath'))
count_2014$ath <- str_replace_all(count_2014$ath,'\\)','')
count_2014$Country <- str_replace_all(count_2014$Country,' ','!torep')
count_2014$Country <- str_replace_all(count_2014$Country,'[:space:]','')
count_2014$Country <- str_replace_all(count_2014$Country,'!torep',' ')
# finally 2018 winter olympic.
url2 <- 'https://en.wikipedia.org/wiki/2018_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
count_2018 <- data.frame(test[[2]])
# korea(cor) with 35 ath == women's ice hockey.
# north 12
# south 23
count_2018 <- count_2018[-which(count_2018$IOC.Code == "COR"),]
idx <- which(count_2018$IOC.Code %in% c('KOR','PRK'))
count_2018$Country <- str_replace_all(count_2018$Country,"\\[a\\]|\\[b\\]","")
count_2018$Athletes[idx] <- count_2018$Athletes[idx] + c(23,12)
count_2018 <- count_2018[,c(2,3)]
nations <- rbind(count_1992,count_1994,count_1998,count_2002,
count_2006,count_2010,count_2014)
(year <- ls()[startsWith(ls(),"count")][-8])
(year <- str_replace_all(year,'\\D',''))
nations$year <- rep(year,c(64,67,72,78,80,82,88))
# write.csv(nations,'country.csv')
test
test[[2]]
test[[2]][1]
pkgs <- c('dplyr','stringr','tidyr',
'data.table','rvest')
sapply(pkgs,require,character.only = TRUE)
# 1992 olympic country & medals.
url2 <- 'https://en.wikipedia.org/wiki/1992_Winter_Olympics'
test <- read_html(url2) %>%
html_nodes(.,css = 'table.wikitable.collapsible') %>%
html_table(fill = TRUE)
temp <- str_split(test[[2]],"\n")[1]
test
